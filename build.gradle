plugins {
	id "fabric-loom" version "0.1.0-SNAPSHOT"
    id "com.matthewprenger.cursegradle" version "1.1.2"
    id "maven-publish"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def build_number = System.getenv('BUILD_NUMBER') != null ? System.getenv('BUILD_NUMBER') : 'CUSTOM'

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-fabric-${mod_version}-${build_number}"

minecraft {
    refmapName = mod_name.toLowerCase() + '-refmap.json'
}

dependencies {
	minecraft "com.mojang:minecraft:${snapshot_version}"
	mappings "net.fabricmc:yarn:${snapshot_version}.${mappings_version}"
	modCompile "net.fabricmc:fabric-loader:${loader_version}"
	modCompile "net.fabricmc:fabric:${api_version}"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

String getChangelogText() {
    def changelogFile = new File('changelog.txt')
    if (!changelogFile.exists())
        return ""
    String str = ''
    String separator = '---'
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (lineCount < 3) {
            lineCount++
            if (it.startsWith(separator)) {
                return
            }
        }
        if (!it.startsWith(separator)) {
            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
            return
        }
        done = true // once we go past the first version block, parse no more
    }
    return str
}

def curseRelations = {
    requiredLibrary 'fabric'
}

curseforge {
    if (project.hasProperty('curse_key'))
        apiKey = project.curse_key

    project {
        id = "${curse_id}"
        changelog = getChangelogText()
        releaseType = 'beta'

        relations curseRelations

        addArtifact sourcesJar
    }
}